
==================== Tidy Core ====================
Result size of Tidy Core
  = {terms: 35, types: 27, coercions: 0, joins: 0/0}

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule4 :: GHC.Prim.Addr#
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Lib.$trModule4 = "main"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule3 :: GHC.Types.TrName
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
Lib.$trModule3 = GHC.Types.TrNameS Lib.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule2 :: GHC.Prim.Addr#
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Lib.$trModule2 = "Lib"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule1 :: GHC.Types.TrName
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
Lib.$trModule1 = GHC.Types.TrNameS Lib.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Lib.$trModule :: GHC.Types.Module
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 10}]
Lib.$trModule = GHC.Types.Module Lib.$trModule3 Lib.$trModule1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Lib.$wfoo [InlPrag=NOINLINE]
  :: GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Prim.Int#
[GblId, Arity=2, Str=<L><L> {92F->1C1(C1(L))}, Unf=OtherCon []]
Lib.$wfoo = GHC.Prim.+#

-- RHS size: {terms: 18, types: 14, coercions: 0, joins: 0/0}
foo [InlPrag=[final]] :: (Int, Int) -> Int -> Int
[GblId,
 Arity=2,
 Str=<1!P(1!P(L),A)><1!P(L)> {92F->1C1(C1(L))},
 Cpr=1,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_sEG [Occ=Once1!] :: (Int, Int))
                 (z_sEO [Occ=Once1!] :: Int) ->
                 case ds_sEG of { (ww_sEI [Occ=Once1!], _ [Occ=Dead]) ->
                 case ww_sEI of { GHC.Types.I# ww2_sEK [Occ=Once1] ->
                 case z_sEO of { GHC.Types.I# ww3_sEQ [Occ=Once1] ->
                 case Lib.$wfoo ww2_sEK ww3_sEQ of ww4_sEV [Occ=Once1]
                 { __DEFAULT ->
                 GHC.Types.I# ww4_sEV
                 }
                 }
                 }
                 }}]
foo
  = \ (ds_sEG :: (Int, Int)) (z_sEO :: Int) ->
      case ds_sEG of { (ww_sEI, ww1_sEM) ->
      case ww_sEI of { GHC.Types.I# ww2_sEK ->
      case z_sEO of { GHC.Types.I# ww3_sEQ ->
      case Lib.$wfoo ww2_sEK ww3_sEQ of ww4_sEV { __DEFAULT ->
      GHC.Types.I# ww4_sEV
      }
      }
      }
      }



